[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "sigmatcher"
authors = [{ name = "Ori Perry", email = "oriori1703@gmail.com" }]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = ["License :: OSI Approved :: MIT License"]
dynamic = ["version"]
description = "Write signatures to automatically match java classes and methods between version"

dependencies = [
    "typer >= 0.12.3",
    "pydantic",
    "pyyaml",
    "platformdirs",
    "graphlib_backport;python_version<'3.9'",
    "typing-extensions;python_version<'3.9'",
]

[project.optional-dependencies]
typing = ["types-PyYAML"]
dev = ["ruff"]
all = ["sigmatcher[typing,dev]"]

[project.urls]
Documentation = "https://github.com/oriori1703/sigmatcher#readme"
Issues = "https://github.com/oriori1703/sigmatcher/issues"
Source = "https://github.com/oriori1703/sigmatcher"

[project.scripts]
sigmatcher = "sigmatcher.cli:main"


[tool.mypy]
strict = true
plugins = [
    "pydantic.mypy"
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true


[tool.pyright]
typeCheckingMode = "strict"

[tool.ruff]
line-length = 120
target-version = "py38"
src = ["src"]

[tool.ruff.lint]
extend-select = [
    "F", # pyflakes
    "E", # pycodestyle
    "I", # isort
    "N", # pep8-naming
    "UP", # pyupgrade
    "RUF", # ruff
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "PTH", # flake8-use-pathlib
    "ANN", # flake8-annotations
]

extend-ignore = [
    "SIM108", # if-else-block-instead-of-if-exp
    "ANN101", # missing-type-self
    "ANN102", # missing-type-cls
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"
